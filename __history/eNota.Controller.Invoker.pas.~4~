unit eNota.Controller.Invoker;

interface

uses
  eNota.Controller.NotaFiscal.Interfaces, System.Classes,
  System.Generics.Collections;

type

  TControllerInvoker = class(TInterfacedObject, iInvoker)
    private
      FLista: TList<iCommand>;
    public
      constructor Create;
      destructor Destroy; override;
      class function New: iInvoker;
      function Add(Value: iCommand): iInvoker;
      function Execute: iInvoker;
  end;

implementation

{ TControllerInvoker }

function TControllerInvoker.Add(Value: iCommand): iInvoker;
begin

end;

constructor TControllerInvoker.Create;
begin
  FLista:= TList<iCommand>.Create;
end;

destructor TControllerInvoker.Destroy;
begin
  FLista.Free;
  inherited;
end;

function TControllerInvoker.Execute: iInvoker;
begin

end;

class function TControllerInvoker.New: iInvoker;
begin
  Result := Self.Create;
end;

end.
