unit eNota.Controller.Invoker;

interface

uses
  eNota.Controller.NotaFiscal.Interfaces;

type

  TControllerNotaFiscal = class(TInterfacedObject, iInvoker)
    private
    public
      constructor Create;
      destructor Destroy; override;
      class function New: iInvoker;
      function Add(Value: iCommand): iInvoker;
      function Execute: iInvoker;
  end;

implementation

{ TControllerNotaFiscal }

constructor TControllerNotaFiscal.Create;
begin

end;

function TControllerNotaFiscal.Criar: iInvoker;
begin
  Result := Self;
end;

destructor TControllerNotaFiscal.Destroy;
begin

  inherited;
end;

function TControllerNotaFiscal.Email: iInvoker;
begin
  Result := Self;
end;

function TControllerNotaFiscal.Enviar: iInvoker;
begin
  Result := Self;
end;

function TControllerNotaFiscal.EnviarNotaSefaz: iInvoker;
begin
  Result := Self;
end;

function TControllerNotaFiscal.Gravar: iInvoker;
begin
  Result := Self;
end;

class function TControllerNotaFiscal.New: iInvoker;
begin
  Result := Self.Create;
end;

function TControllerNotaFiscal.Validar: iInvoker;
begin
  Result := Self;
end;

end.
